<?php

namespace app\index\model\branchcompany;
use think\Model;
use app\common\help\Help;
use think\config;
use think\Db;
class CompanyOrderProductTeam extends Model{
    //protected $connection = ['database' => 'erp'];
    protected $table = 'company_order_product_team';
    private $_languageList;
    public function initialize()
    {
        $this->_languageList = config('systom_setting')['language_list'];
        parent::initialize();

    }

    /**
     * 添加公司订单-团队产品
     * 胡
     */
    public function addCompanyOrderProductTeam($params){

        $t = time();
		$data['company_order_number'] = $params['company_order_number'];
		$data['team_product_number'] = $params['team_product_number'];
		$data['team_product_name'] = $params['team_product_name'];
		$data['branch_product_number'] = $params['branch_product_number'];
		//$data['cost_currency_id']=1;
		$data['team_product_cost']=$params['team_product_cost'];
		$data['team_product_price'] =$params['team_product_price'];
        $data['price_currency_id']=$params['price_currency_id'];
 		if(!empty($params['team_product_cost_univalence'])){
 			$data['team_product_cost_univalence']=$params['team_product_cost_univalence'];
 		}
        
 		if(!empty($params['settlement_type'])){
 			$data['settlement_type']=$params['settlement_type'];
 		}
 		
        $data['cost_currency_id'] =$params['cost_currency_id'];
        $data['supplier_name'] =$params['supplier_name'];
		$data['create_time'] = $t;
		$data['update_time'] = $t;
		$data['create_user_id'] = $params['user_id'];
		$data['update_user_id'] = $params['user_id'];
		$data['status'] = 1;
		
        $this->startTrans();
        try{
			
        	$result = $this->insertGetId($data);
        	
        	
            // 提交事务
            $this->commit();

        } catch (\Exception $e) {
            $result = $e->getMessage();
            // 回滚事务
            $this->rollback();

        }
     
        return $result;
    }

    /**
     * 获取公司订单 -团队产品
     * 胡
     */
    public function getCompanyOrderProductTeam($params){

 
    	$data = "1=1";
    	if(!empty($params['company_order_number'])){
    		$data.= " and company_order_number = '".$params['company_order_number']."'";
    	}
    	if(!empty($params['team_product_number'])){
    		$data.= " and team_product_number = '".$params['team_product_number']."'";
    	}
    	if(is_numeric($params['status'])){
    		$data.= " and status = ".$params['status'];
    	}
		if(!empty($params['settlement_type'])){
			$data.= " and settlement_type = ".$params['settlement_type'];
		}
    
            $result= $this->table("company_order_product_team")->alias("company_order_product_team")->
            where($data)->
            field(['company_order_product_team.company_order_product_team_id','company_order_product_team.company_order_number','company_order_product_team.team_product_number',
            		'company_order_product_team.team_product_name','company_order_product_team.branch_product_number','company_order_product_team.team_product_price',
            		'company_order_product_team.team_product_cost','company_order_product_team.cost_currency_id','company_order_product_team.price_currency_id','company_order_product_team.invoice_number',
            		'company_order_product_team.supplier_name','company_order_product_team.supplier_name as team_product_company_name',
                    'company_order_product_team.invoice_time',
            		
            		'company_order_product_team.team_product_cost_univalence',
            		'company_order_product_team.cope_number','company_order_product_team.receivable_number',
            		"(select company_id from company_order where company_order.company_order_number = company_order_product_team.company_order_number) as company_id",
            		"(select team_product_id from team_product where team_product.team_product_number= company_order_product_team.team_product_number) as team_product_id",
            		
            		"(select currency_name from currency where company_order_product_team.price_currency_id = currency.currency_id) as price_currency_name",
            		"(select currency_name from currency where company_order_product_team.cost_currency_id = currency.currency_id) as cost_currency_name",
            		"(select nickname  from user where user.user_id = company_order_product_team.create_user_id)"=>'create_user_name',
            		"(select nickname  from user where user.user_id = company_order_product_team.update_user_id)"=>'update_user_name',
            		'company_order_product_team.create_user_id','company_order_product_team.update_user_id','company_order_product_team.create_time',
            		'company_order_product_team.update_time','company_order_product_team.status'])->
            
            select();

       


        return $result;

    }
	/**
	 * 根据团队产品编号获取公司订单号
	 */
    public function getCompanyOrderNumberByTeamProductNumber($params){
        $team_product_number = $params['team_product_number'];
    	$where = [
    		'copt.team_product_number'=>$team_product_number,
    		'copt.status'=>1,
    		'co.status'=>1	
    		
    	];
    	if(!empty($params['company_id'])){
    		$where["co.company_id"] = $params['company_id'];
    	}
       if(!empty($params['company_order_number'])){
           $where["co.company_order_number"] = $params['company_order_number'];
       }
    	if(!empty($params['nickname'])){
           $create_user_id = $this->table('user')->where("nickname LIKE '%{$params['nickname']}%'")->field('user_id')->select();
           // echo ($this->table("user")->getLastSql());exit;
           // var_dump($create_user_id); exit;
           $where['co.create_user_id'] = $create_user_id[0]['user_id']?:0;
       } 
       
    	$result = $this->table("company_order_product_team")->alias("copt")->
    		join("company_order co",'co.company_order_number = copt.company_order_number')->
    		join("company",'co.company_id = company.company_id')->
    		where($where)->field([
    			'copt.company_order_number','company.company_name','co.create_user_id',
    			'co.company_id',
    			"(select count(*) from company_order_customer where company_order_customer.company_order_number = co.company_order_number and status<>0) as people_number",
    			"(select nickname  from user where user.user_id = co.create_user_id)"=>'create_user_name',
    			'co.create_time'	
    			
    	])->select(); 
    	
    	return $result;
    }

    /**
     * 修改公司订单的团队产品
     */
    public function updateCompanyOrderTeam($params){

        $t = time();
        
        if(!empty($params['invoice_number'])){
        	$data['invoice_number'] = $params['invoice_number'];

        }
        if(!empty($params['invoice_time'])){
        	$data['invoice_time'] = $params['invoice_time'];
        
        }
        if(!empty($params['price_currency_id'])){
        	$data['price_currency_id'] = $params['price_currency_id'];
        
        }
        if(!empty($params['team_product_price'])){
        	$data['team_product_price'] = $params['team_product_price'];
        
        }
        if(!empty($params['team_product_cost'])){
        	$data['team_product_cost'] = $params['team_product_cost'];
        
        }
        if(!empty($params['cost_currency_id'])){
        	$data['cost_currency_id'] = $params['cost_currency_id'];
        
        }
        
        
        
        
        if(!empty($params['company_order_number'])){
        	$where['company_order_number'] = $params['company_order_number'];
        }
        if(!empty($params['team_product_number'])){
        	$where['team_product_number'] = $params['team_product_number'];
        }
        if(!empty($params['branch_product_number'])){
        	$where['branch_product_number'] = $params['branch_product_number'];
        }
        if(!empty($params['company_order_product_team_id'])){
        	$where['company_order_product_team_id'] = $params['company_order_product_team_id'];
        }
        if(!empty($params['cope_number'])){
        	$data['cope_number'] = $params['cope_number'];
        }
        if(!empty($params['receivable_number'])){
        	$data['receivable_number'] = $params['receivable_number'];
        }
        if(is_numeric($params['status'])){
            $data['status'] = $params['status'];

        }
		

        $data['update_user_id'] = $params['now_user_id'];

        $data['update_time'] = $t;




        $this->startTrans();
        try{
            $this->where($where)->update($data);

            $result = 1;
            // 提交事务
            $this->commit();

        } catch (\Exception $e) {
            $result = $e->getMessage();
            // 回滚事务
            $this->rollback();

        }
        return $result;
    }
	
    

    /**
     * 更改状态
     */
    public function updateCompanyOrderTeamStatus($params){
    
    	if(!empty($params['company_order_number'])){
    		$where['company_order_number'] = $params['company_order_number'];
    		 
    	}
    	if(!empty($params['team_product_number'])){
    		$where['team_product_number'] = $params['team_product_number'];
    		 
    	}
    	if(is_numeric($params['status'])){
    		$data['status'] = $params['status'];
    		 
    	}
    
    	$this->startTrans();
    	try{
    		$this->where($where)->update($data);
    		 
    		$result = 1;
    		// 提交事务
    		$this->commit();
    		 
    	} catch (\Exception $e) {
    		$result = $e->getMessage();
    		// 回滚事务
    		$this->rollback();
    		 
    	}
    	return $result;
    }
}