<?php
namespace app\index\model\finance;
use think\Model;
use app\common\help\Help;
use think\config;
use think\Db;

class ReceivableInfo extends Model
{
    //protected $connection = ['database' => 'erp'];
    protected $table = 'receivable_info';
    private $_languageList;

    public function initialize()
    {
        $this->_languageList = config('systom_setting')['language_list'];
        parent::initialize();

    }
    /**
     * 添加批量应收
     * 
     */
    public function addReceivableInfo($params){

        $t = time();
		
		
		if(!empty( $params['receivable_voucher'])){
			$receivable_voucher = $params['receivable_voucher'];
		}
		if(!empty( $params['voucher_time'])){
			$voucher_time = $params['voucher_time'];
		}
	
		
		$payment_currency_id = $params['payment_currency_id'];
		$payment_type = $params['payment_type'];
		$payment_number = $params['payment_number'];
		$user_id = $params['now_user_id'];

  
        


        $this->startTrans();
        try{
        $sql_values="insert into receivable_info (fee_type_code,fee_type_type,receivable_number,receivable_voucher,voucher_time,payment_money,payment_currency_id,payment_type,payment_number,create_time,update_time,create_user_id,update_user_id,status) values";
        
       
        	for($i=0;$i<count($params['receivable_info']);$i++){
        		$receivable_number = $params['receivable_info'][$i]['receivable_number'];
        		$payment_money = $params['receivable_info'][$i]['payment_money'];
        		$status = 1;
				//获取订单的fee_type
				$receivable_result = $this->table('receivable')->where("receivable_number ='$receivable_number'")->find();
				$fee_type_code=999;
				$fee_type_type=999;
//         		if($receivable_result['fee_type_code'] ==75){
//         			$fee_type=79;
//         		}
//         		if($receivable_result['fee_type_code'] ==77){
//  					$fee_type=81;      			 
//         		}       		
        		$sql_values.="($fee_type_code,$fee_type_type,'$receivable_number','$receivable_voucher',$voucher_time,$payment_money,$payment_currency_id,$payment_type,'$payment_number',$t,$t,$user_id,$user_id,$status),";
        
        	}
        	$sql_values = trim($sql_values,',');
  			error_log(print_r($sql_values,1));
        	$this->execute($sql_values);
            // 提交事务
            $this->commit();
            $result = 1;

        } catch (\Exception $e) {
            $result = $e->getMessage();
            // 回滚事务
            $this->rollback();

        }

        return $result;
    }
    /**
     * 添加应收-销售收款
     * 胡
     */
    public function addReceivableInfoSale($params){
    
    	$t = time();
		$user_id = $params['now_user_id'];
		
    	
		$data['receivable_info_type'] = 1;
    	$data['payment_stage'] = $params['payment_stage'];
    	$data['payment_currency_id'] = $params['payment_currency_id'];
    	$data['receivable_number'] = $params['receivable_number'];
    	$data['payment_money'] = $params['payment_money'];
    	$data['payment_time'] = $params['payment_time'];
    	if(!empty($params['payment_number'])){
    		$data['payment_number'] = $params['payment_number'];
    	}else{
    		$data['payment_number'] = Help::getNumber(201);
    	}
    	
    	$data['receivable_info_type'] =2;
    	$data['payment_type'] =$params['payment_type'];
    	$data['receivable_voucher'] = $params['receivable_voucher'];
    	$data['voucher_time'] = $params['voucher_time'];
   		$data['create_time'] = $t;
   		$data['update_time'] = $t;
   		$data['create_user_id'] = $user_id;
   		$data['update_user_id'] = $user_id;
   		$data['approval_status']=1;
   		if(!empty($params['remark'])){
   			$data['remark'] = $params['remark'];
   		}
   		$data['status'] = 1;
    	$this->startTrans();
    	try{
			$this->insert($data);
    		// 提交事务
    		$this->commit();
    		$result = 1;
    
    	} catch (\Exception $e) {
    		$result = $e->getMessage();
    		// 回滚事务
    		$this->rollback();
    
    	}
    
    	return $result;
    }
    /**
     * 获取应收详情
     * 王
     */
    public function getReceivableInfo($params)
    {
        $data = "1=1";

        if(isset($params['receivable_number'])){
            $data.= " and receivable_info.receivable_number = '".$params['receivable_number']."'";
        }
        if(isset($params['receivable_info_id'])){
        	$data.= " and receivable_info.receivable_info_id = '".$params['receivable_info_id']."'";
        }
        if(is_numeric($params['status'])){
            $data.= " and receivable_info.status = ".$params['status'];
        }
        if(is_numeric($params['receivable_info_type'])){
        	$data.= " and receivable_info.receivable_info_type = ".$params['receivable_info_type'];
        }
        if(!empty($params['company_order_number'])){
   
        	$data.= " and receivable.order_number = '".$params['order_number']."'";
        }
        $result = $this->table("receivable_info")->alias('receivable_info')->
        join("receivable","receivable.receivable_number = receivable_info.receivable_number",'left')->
        where($data)->
        field(['receivable_info.receivable_info_id','receivable_info.receivable_number','receivable_info.payment_currency_id',
        	'receivable_info.receivable_voucher','receivable_info.voucher_time',	
            'receivable_info.payment_type',  'receivable_info.payment_money',  'receivable_info.payment_number',
         	'receivable_info.payment_stage','receivable_info.receivable_info_type','receivable_info.payment_time',
  			'receivable.create_user_id as receivable_create_user_id',
       		"(select nickname  from user where user.user_id =receivable_create_user_id)"=>'receivable_user_name',
        	"(select  currency_name from currency where  currency.currency_id = receivable_info.payment_currency_id) as payment_currency_name",
            "(select nickname  from user where user.user_id = receivable_info.create_user_id)"=>'create_user_name',
            "(select nickname  from user where user.user_id = receivable_info.update_user_id)"=>'update_user_name',
            'receivable_info.create_user_id','receivable_info.create_time','receivable_info.update_user_id',
            'receivable_info.update_time','receivable_info.status'])->select();

        return $result;


    }
    

	//修改应收详情根据应收详情ID
	public function updateReceivableInfoByReceivableInfoId($params){
		$t = time();
		if(!empty($params['payment_stage'])){
			$data['payment_stage'] = $params['payment_stage'];
		
		}
		if(!empty($params['payment_currency_id'])){
			$data['payment_currency_id'] = $params['payment_currency_id'];
		
		}
		if(!empty($params['payment_money'])){
			$data['payment_money'] = $params['payment_money'];
		
		}
        if(!empty($params['payment_time'])){
            $data['payment_time'] = $params['payment_time'];

        }
		if(!empty($params['payment_type'])){
			$data['payment_type'] = $params['payment_type'];
		
		}
		if(!empty($params['payment_time'])){
			$data['payment_time'] = $params['payment_time'];
		
		}
		if(is_numeric($params['status'])){
			$data['status'] = $params['status'];
		
		}
		$data['update_user_id'] = $params['now_user_id'];
		$data['update_time'] = $t;
		
		$data_where['receivable_info_id'] = $params['receivable_info_id'];
		$this->startTrans();
		try{
			 
			 
			$this->table('receivable_info')->where($data_where)->update($data);
			$result = 1;
			// 提交事务
			$this->commit();
		
		} catch (\Exception $e) {
			$result = $e->getMessage();
			// 回滚事务
			$this->rollback();
		
		}
		return $result;

	}
	

	//修改应收详情根据应收详情ID
	public function updateReceivableInfoByPaymentNumber($params){
		$t = time();

		if(is_numeric($params['status'])){
			$data['status'] = $params['status'];
	
		}
		$data['update_user_id'] = $params['now_user_id'];
		$data['update_time'] = $t;
	
		$data_where['payment_number'] = $params['payment_number'];
		$this->startTrans();
		try{
	
	
			$this->table('receivable_info')->where($data_where)->update($data);
			$result = 1;
			// 提交事务
			$this->commit();
	
		} catch (\Exception $e) {
			$result = $e->getMessage();
			// 回滚事务
			$this->rollback();
	
		}
		return $result;
	
	}
	//获取已收金额
	public function getReceivableInfoMoney($params){
		$data=" and 1=1 ";
		if(!empty($params['company_id'])){
			$data.=" and company_id = ".$params['company_id'];
		}
		$sql="select  if(sum(payment_money)>0,sum(payment_money),0)  as true_receivable from receivable_info where receivable_info.receivable_number in (select receivable_number from receivable where receivable.receivable_number = receivable_info.receivable_number and status = 1  $data) and status = 1";
		
		$result = $this->query($sql);
		
		return $result;
	}
}