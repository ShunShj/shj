<?php

namespace app\index\model\source;
use think\Model;
use app\common\help\Help;
use think\config;
use think\Db;
class Supplier extends Model{
    //protected $connection = ['database' => 'erp'];
    protected $table = 'supplier';
    private $_languageList;
    public function initialize()
    {
    	$this->_languageList = config('systom_setting')['language_list'];
    	parent::initialize();
    
    }

    /**
     * 添加供应商
     * 胡
     */
    public function addSupplier($params){
    	$t = time();
    
    	 
    	$data['supplier_name'] = $params['supplier_name'];
    	$data['supplier_type_id'] = $params['supplier_type_id'];       	
    	$data['country_id'] = $params['country_id'];
        if(isset($params['level_name'])){
            $data['level_name'] = $params['level_name'];
        }
        if(isset($params['linkman'])){
            $data['linkman'] = $params['linkman'];
        }
        if(isset($params['address'])){
            $data['address'] = $params['address'];
        }
        if(isset($params['zip_code'])){
            $data['zip_code'] = $params['zip_code'];
        }
        if(isset($params['phone'])){
            $data['phone'] = $params['phone'];
        }
        if(isset($params['website'])){
            $data['website'] = $params['website'];
        }
        if(isset($params['fax'])){
            $data['fax'] = $params['fax'];
        }
    	$data['supplier_number'] = $params['supplier_number'];
    	$data['company_id'] = $params['choose_company_id'];
        if(isset($params['remark'])){
            $data['remark'] = $params['remark'];
        }
    	$data['create_time'] = $t;
    	$data['update_time'] = $t;
    	$data['create_user_id'] = $params['now_user_id'];
    	$data['update_user_id'] = $params['now_user_id'];
    	$data['status'] = $params['status'];
    
    	
    	 
    
    
    
    	Db::startTrans();
    	try{
    		Db::name('supplier')->insert($data);
    
    		$result = 1;
    		// 提交事务
    		Db::commit();
    
    	} catch (\Exception $e) {
    		$result = $e->getMessage();
    		// 回滚事务
    		Db::rollback();
    		//\think\Response::create(['code' => '400', 'msg' =>$result], 'json')->send();
    		//exit();
    
    	}
    
    	return $result;
    }
    
    /**
     * 获取供应商
     * 胡
     */
    public function getSupplier($params,$is_count=false,$is_page=false,$page=null,$page_size=20){
    
    
    	$data = "1=1 ";
    	if(isset($params['supplier_id'])){
    		$data.= " and supplier.supplier_id= ".$params['supplier_id'];
    	}
    	if(isset($params['supplier_number'])){
    		$data.= " and supplier.supplier_number= '".$params['supplier_number']."'";
    	}
    	if(isset($params['status'])){
    		$data.= " and supplier.status = ".$params['status'];
    	}
    	if(isset($params['supplier_name'])){
    		$data.= " and supplier.supplier_name like '%".$params['supplier_name']."%'";
    	}
    	if(isset($params['supplier_type_id'])){
    		$data.= " and supplier.supplier_type_id = '".$params['supplier_type_id']."'";
    	}
    	if(isset($params['country_id'])){
    		$data.= " and supplier.country_id = '".$params['country_id']."'";
    	}    
    	if(isset($params['phone'])){
    		$data.= " and supplier.phone = '".$params['phone']."'";
    	} 
    	if(isset($params['linkman'])){
    		$data.= " and supplier.linkman = '".$params['linkman']."'";
    	}
        if(is_numeric($params['company_id'])){
            $data.= " and supplier.company_id = '".$params['company_id']."'";
        }
        if($is_count==true){
            $result = $this->table("supplier")->alias("supplier")->where($data)->count();
        }else {
            if ($is_page == true) {
                $result = $this->table("supplier")->alias('supplier')->
                join("country", "supplier.country_id= country.country_id", 'left')->
                join('supplier_type', 'supplier_type.supplier_type_id = supplier.supplier_type_id')->
                //join('source_level','source_level.source_level_id = supplier.source_level_id','left')->
                join('company', 'company.company_id= supplier.company_id')->
                where($data)->limit($page, $page_size)->order('create_time desc')->
                field(['supplier.supplier_id', "supplier.supplier_name", "supplier.supplier_type_id", 'supplier_type.supplier_type_name',
                    'supplier.country_id as city_id', 'country.country_name as city_name', 'country.pid as city_pid', 'supplier.level_name', 'supplier.linkman', 'supplier.address', 'supplier.zip_code',
                    'supplier.phone', 'supplier.website', 'supplier.fax', 'supplier.email', 'supplier.supplier_number', 'supplier.remark',
                    'supplier.default_language_id',
                    "supplier.company_id", 'company.company_name',
                    //'source_level.source_level_id as level_id','source_level.source_level_name as level_name',
                    "(select nickname  from user where user.user_id = supplier.create_user_id)"                                                                                => 'create_user_name',
                    "(select nickname  from user where user.user_id = supplier.update_user_id)"                                                                                => 'update_user_name',
                    "(select country_name  from country as country2 where country2.country_id= city_pid)"                                                                      => 'province_name',
                    "(select country_id  from country as country2 where country2.country_id= city_pid)"                                                                        => 'province_id',
                    //"(select pid  from country as country2 where country2.country_id= country.pid)"=>'b',
                    "(select country_name  from country as country2 where country2.country_id= (select pid  from country as country2 where country2.country_id= country.pid))" => 'country_name',
                    "(select country_id  from country as country2 where country2.country_id= (select pid  from country as country2 where country2.country_id= country.pid))"   => 'country_id',

                    'supplier.update_time', 'supplier.create_time', "supplier.status"])->select();
            }else{
                $result = $this->table("supplier")->alias('supplier')->
                join("country", "supplier.country_id= country.country_id", 'left')->
                join('supplier_type', 'supplier_type.supplier_type_id = supplier.supplier_type_id')->
                //join('source_level','source_level.source_level_id = supplier.source_level_id','left')->
                join('company', 'company.company_id= supplier.company_id')->
                where($data)->order('create_time desc')->
                field(['supplier.supplier_id', "supplier.supplier_name", "supplier.supplier_type_id", 'supplier_type.supplier_type_name',
                    'supplier.country_id as city_id', 'country.country_name as city_name', 'country.pid as city_pid', 'supplier.level_name', 'supplier.linkman', 'supplier.address', 'supplier.zip_code',
                    'supplier.phone', 'supplier.website', 'supplier.fax', 'supplier.email', 'supplier.supplier_number', 'supplier.remark',
                    'supplier.default_language_id',
                    "supplier.company_id", 'company.company_name',
                    //'source_level.source_level_id as level_id','source_level.source_level_name as level_name',
                    "(select nickname  from user where user.user_id = supplier.create_user_id)"                                                                                => 'create_user_name',
                    "(select nickname  from user where user.user_id = supplier.update_user_id)"                                                                                => 'update_user_name',
                    "(select country_name  from country as country2 where country2.country_id= city_pid)"                                                                      => 'province_name',
                    "(select country_id  from country as country2 where country2.country_id= city_pid)"                                                                        => 'province_id',
                    //"(select pid  from country as country2 where country2.country_id= country.pid)"=>'b',
                    "(select country_name  from country as country2 where country2.country_id= (select pid  from country as country2 where country2.country_id= country.pid))" => 'country_name',
                    "(select country_id  from country as country2 where country2.country_id= (select pid  from country as country2 where country2.country_id= country.pid))"   => 'country_id',

                    'supplier.update_time', 'supplier.create_time', "supplier.status"])->select();
            }
        }
    	 
    
    
    	return $result;
    
    }

    /**
     * 获取供应商数据根据COUNTRY_ID 与lang_id
     */
    public function getSupplierBySupplierIdLangId($params){
    	
    	$lang_id = $params['lang_id'];
    	$data['language_id'] = $lang_id;
    	$data['supplier_number'] = $params['supplier_number'];
    	$result = $this->table('supplier_language')->where($data)->find();
    	return $result;
    }
    
    /**
     * 修改供应商多语言数据根据供应商多语言ID
     */
    public function updateSupplierLanguageBySupplierLanguageId($params){
    	
    	$t = time();
    	$user_id = $params['user_id'];
    	
    	$original_number = $params['data'][0]['supplier_number'];
    	
    	$original_data['supplier_number'] = $original_number;
    	
    	 
    	$params = $params['data'];
    	
    	//原始数据主键
    	
    	$original_result = $this->getSupplier($original_data);
    
    	
    	$default_language_id = $original_result[0]['default_language_id'];
		
    	$this->startTrans();
    	try{
    		for($i=0;$i<count($params);$i++){
    			
    			$data = [];
    			if(!trim($params[$i]['supplier_name'])==''){
    				 
    				$data['supplier_name'] = $params[$i]['supplier_name'];
    				$data['update_time'] = $t;
    				$data['update_user_id'] = $user_id;
    
    				if(is_numeric($params[$i]['supplier_language_id'])){
    					$this->table('supplier_language')->where("supplier_language_id = ".$params[$i]['supplier_language_id'])->update($data);
    				
    					//再查询是否是原始数据  如果是原始数据那么原始 数据也要更改
    					if($default_language_id == $params[$i]['lang_id']){
    					
    						$this->where("supplier_number = '$original_number'")->update($data);
    						
    						
    					}
    				}else{
    						
    					$data['create_time'] = $t;
    					$data['create_user_id'] = $user_id;
    					$data['status'] = 1;
    					$data['supplier_number'] = $original_number;
    					$data['language_id'] = $params[$i]['lang_id'];
    
    					$this->table("supplier_language")->insert($data);
    				
    					 
    				}
    			}
    		}
    
    		$result = 1;
    		// 提交事务
    		$this->commit();
    		 
    	} catch (\Exception $e) {
    		$result = $e->getMessage();
    		// 回滚事务
    		$this->rollback();
    		 
    	}
    
    	return $result;
    	 
    }    
    /**
     * 修改供应商 根据supplier_id
     */
    public function updateSupplierBySupplierId($params){
    
    	$t = time();

    	if(!empty($params['supplier_name'])){
    		$data['supplier_name'] = $params['supplier_name'];    
    	}
    
    	if(!empty($params['supplier_type_id'])){
    		$data['supplier_type_id'] = $params['supplier_type_id'];
    	}
    	 
    	if(!empty($params['country_id'])){
    		$data['country_id'] = $params['country_id'];
    	}

        if(isset($params['level_name'])){
            $data['level_name'] = $params['level_name'];
        }
        if(isset($params['linkman'])){
            $data['linkman'] = $params['linkman'];
        }
        if(isset($params['address'])){
            $data['address'] = $params['address'];
        }
        if(isset($params['zip_code'])){
            $data['zip_code'] = $params['zip_code'];
        }
        if(isset($params['phone'])){
            $data['phone'] = $params['phone'];
        }
        if(isset($params['website'])){
            $data['website'] = $params['website'];
        }
        if(isset($params['fax'])){
            $data['fax'] = $params['fax'];
        }
        if(!empty($params['choose_company_id'])){
            $data['company_id'] = $params['choose_company_id'];

        }
    	  	
//    	if(!empty($params['remark'])){
//    		$data['remark'] = $params['remark'];
//    	}
    	
    	if(!empty($params['status'])){
    		$data['status'] = $params['status'];
    
    	}
    
    
    	$data['update_user_id'] = $params['user_id'];
    	$data['update_time'] = $t;

    
    	Db::startTrans();
    	try{
    		Db::name('supplier')->where("supplier_id = ".$params['supplier_id'])->update($data);

    		$result = 1;
    		// 提交事务
    		Db::commit();
    
    	} catch (\Exception $e) {
    		$result = $e->getMessage();
    		// 回滚事务
    		Db::rollback();
    
    	}
    	return $result;
    }

    /**
     * getOneSupplier
     *
     * 获取一条供应商数据
     * @author shj
     *
     * @param $supplier_id
     *
     * @return void
     * Date: 2019/2/26
     * Time: 10:24
     */
    public function getOneSupplier($supplier_id){
        $result = $this->table("supplier")->where(['supplier_id' => $supplier_id])->find();
        return $result;
    }
}